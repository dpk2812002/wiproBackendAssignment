package com.example.appointment_service.service;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.kafka.core.KafkaTemplate;
import org.springframework.stereotype.Service;

import com.example.appointment_service.feign.DoctorClient;
import com.example.appointment_service.feign.PatientClient;
import com.example.appointment_service.repository.AppointmentRepository;

@Service
public class AppointmentService {
	
	@Autowired
	AppointmentRepository appointmentRepository;
	
	 @Autowired
	    private KafkaTemplate<String, String> kafkaTemplate;
	 

	    @Autowired
	    private PatientClient patientClient;

	    @Autowired
	    private DoctorClient doctorClient;
	    
	    
	    private static final String TOPIC = "appointment-confirmed";
	    
	    
	    public AppointmentResponseDTO bookAppointment(Appointment appointment) {
	        appointment.setStatus("BOOKED");
	        Appointment saved = appointmentRepository.save(appointment);

	        // Send Kafka message
	        kafkaTemplate.send(TOPIC, "Appointment Confirmed with ID: " + saved.getId());

	        // Fetch details
	        PatientDTO patient = patientClient.getPatientById(saved.getPatientId());
	        DoctorDTO doctor = doctorClient.getDoctorById(saved.getDoctorId());

	        AppointmentResponseDTO response = new AppointmentResponseDTO();
	        response.setAppointmentId(saved.getId());
	        response.setAppointmentTime(saved.getAppointmentTime());
	        response.setStatus(saved.getStatus());
	        response.setPatient(patient);
	        response.setDoctor(doctor);

	        return response;
	    }

	    public AppointmentResponseDTO getAppointment(Long id) {
	        Optional<Appointment> optional = appointmentRepository.findById(id);
	        if (optional.isEmpty()) {
	            return null;
	        }
	        Appointment appointment = optional.get();

	        PatientDTO patient = patientClient.getPatientById(appointment.getPatientId());
	        DoctorDTO doctor = doctorClient.getDoctorById(appointment.getDoctorId());

	        AppointmentResponseDTO response = new AppointmentResponseDTO();
	        response.setAppointmentId(appointment.getId());
	        response.setAppointmentTime(appointment.getAppointmentTime());
	        response.setStatus(appointment.getStatus());
	        response.setPatient(patient);
	        response.setDoctor(doctor);

	        return response;
	    }
	    
	 
	

}
